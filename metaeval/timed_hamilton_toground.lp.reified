% Inputfile: hamilton_toground.lp
% oncycle(X , Y) :- 
% 	 edge(X , Y) ,
% 	 not other(X , Y).
% 
hasrule(1,2).
rule(2).
bodycount(2,2).
pos(3).
head(2,3).
rulepred(2,3).
arity(3,2).
pred(3,"oncycle").
var(4,"X").
rulevar(2,4).
alist(3,1,4).
var(5,"Y").
rulevar(2,5).
alist(3,2,5).
bodylist(2,2,6).
neg(6).
body(2,6).
rulepred(2,6).
arity(6,2).
pred(6,"other").
var(7,"X").
rulevar(2,7).
alist(6,1,7).
var(8,"Y").
rulevar(2,8).
alist(6,2,8).
bodylist(2,1,9).
pos(9).
body(2,9).
rulepred(2,9).
arity(9,2).
pred(9,"edge").
var(10,"X").
rulevar(2,10).
alist(9,1,10).
var(11,"Y").
rulevar(2,11).
alist(9,2,11).
maxrulectr(2,12).
% other(X , Y) :- 
% 	 edge(X , Y) ,
% 	 edge(X , Z) ,
% 	 Y != Z ,
% 	 oncycle(X , Z).
% 
hasrule(1,13).
rule(13).
bodycount(13,4).
pos(14).
head(13,14).
rulepred(13,14).
arity(14,2).
pred(14,"other").
var(15,"X").
rulevar(13,15).
alist(14,1,15).
var(16,"Y").
rulevar(13,16).
alist(14,2,16).
bodylist(13,4,17).
pos(17).
body(13,17).
rulepred(13,17).
arity(17,2).
pred(17,"oncycle").
var(18,"X").
rulevar(13,18).
alist(17,1,18).
var(19,"Z").
rulevar(13,19).
alist(17,2,19).
bodylist(13,3,20).
bexpr(13,20).
bop(20,"!=").
larg(20,21).
var(21,"Y").
rulevar(13,21).
rarg(20,22).
var(22,"Z").
rulevar(13,22).
bodylist(13,2,23).
pos(23).
body(13,23).
rulepred(13,23).
arity(23,2).
pred(23,"edge").
var(24,"X").
rulevar(13,24).
alist(23,1,24).
var(25,"Z").
rulevar(13,25).
alist(23,2,25).
bodylist(13,1,26).
pos(26).
body(13,26).
rulepred(13,26).
arity(26,2).
pred(26,"edge").
var(27,"X").
rulevar(13,27).
alist(26,1,27).
var(28,"Y").
rulevar(13,28).
alist(26,2,28).
maxrulectr(13,29).
% node(X) :- 
% 	 edge(X , Y).
% 
hasrule(1,30).
rule(30).
bodycount(30,1).
pos(31).
head(30,31).
rulepred(30,31).
arity(31,1).
pred(31,"node").
var(32,"X").
rulevar(30,32).
alist(31,1,32).
bodylist(30,1,33).
pos(33).
body(30,33).
rulepred(30,33).
arity(33,2).
pred(33,"edge").
var(34,"X").
rulevar(30,34).
alist(33,1,34).
var(35,"Y").
rulevar(30,35).
alist(33,2,35).
maxrulectr(30,36).
% node(Y) :- 
% 	 edge(X , Y).
% 
hasrule(1,37).
rule(37).
bodycount(37,1).
pos(38).
head(37,38).
rulepred(37,38).
arity(38,1).
pred(38,"node").
var(39,"Y").
rulevar(37,39).
alist(38,1,39).
bodylist(37,1,40).
pos(40).
body(37,40).
rulepred(37,40).
arity(40,2).
pred(40,"edge").
var(41,"X").
rulevar(37,41).
alist(40,1,41).
var(42,"Y").
rulevar(37,42).
alist(40,2,42).
maxrulectr(37,43).
% reached(1).
% 
hasrule(1,44).
assert(44).
% time(44,200).
pos(45).
head(44,45).
rulepred(44,45).
arity(45,1).
pred(45,"reached").
cnst(46,"1").
alist(45,1,46).
maxrulectr(44,47).
% reached(Y) :- 
% 	 reached(X) ,
% 	 oncycle(X , Y) ,
% 	 edge(X , Y).
% 
hasrule(1,48).
rule(48).
bodycount(48,3).
pos(49).
head(48,49).
rulepred(48,49).
arity(49,1).
pred(49,"reached").
var(50,"Y").
rulevar(48,50).
alist(49,1,50).
bodylist(48,3,51).
pos(51).
body(48,51).
rulepred(48,51).
arity(51,2).
pred(51,"edge").
var(52,"X").
rulevar(48,52).
alist(51,1,52).
var(53,"Y").
rulevar(48,53).
alist(51,2,53).
bodylist(48,2,54).
pos(54).
body(48,54).
rulepred(48,54).
arity(54,2).
pred(54,"oncycle").
var(55,"X").
rulevar(48,55).
alist(54,1,55).
var(56,"Y").
rulevar(48,56).
alist(54,2,56).
bodylist(48,1,57).
pos(57).
body(48,57).
rulepred(48,57).
arity(57,1).
pred(57,"reached").
var(58,"X").
rulevar(48,58).
alist(57,1,58).
maxrulectr(48,59).
% :- 
% 	 not oncycle(Y , X)  :  edge(Y , X) ,
% 	 node(X).
% 
hasrule(1,60).
constraint(60).
bodycount(60,2).
bodylist(60,2,61).
pos(61).
body(60,61).
rulepred(60,61).
arity(61,1).
pred(61,"node").
var(62,"X").
rulevar(60,62).
alist(61,1,62).
bodylist(60,1,63).
body(60,63).
composite(63).
rulecomposite(60,63).
compositenum(63,2).
tlist(63,1,64).
neg(65).
qual(64,65).
rulepred(64,65).
arity(65,2).
pred(65,"oncycle").
var(66,"Y").
rulevar(60,66).
alist(65,1,66).
var(67,"X").
rulevar(60,67).
alist(65,2,67).
tlist(63,2,68).
pos(69).
qual(68,69).
rulepred(68,69).
arity(69,2).
pred(69,"edge").
var(70,"Y").
rulevar(60,70).
alist(69,1,70).
var(71,"X").
rulevar(60,71).
alist(69,2,71).
maxrulectr(60,72).
% :- 
% 	 node(X) ,
% 	 not reached(X).
% 
hasrule(1,73).
constraint(73).
bodycount(73,2).
bodylist(73,2,74).
neg(74).
body(73,74).
rulepred(73,74).
arity(74,1).
pred(74,"reached").
var(75,"X").
rulevar(73,75).
alist(74,1,75).
bodylist(73,1,76).
pos(76).
body(73,76).
rulepred(73,76).
arity(76,1).
pred(76,"node").
var(77,"X").
rulevar(73,77).
alist(76,1,77).
maxrulectr(73,78).
% edge(1 , 2).
% 
hasrule(1,79).
time(79,100).
assert(79).
pos(80).
head(79,80).
rulepred(79,80).
arity(80,2).
pred(80,"edge").
cnst(81,"1").
alist(80,1,81).
cnst(82,"2").
alist(80,2,82).
maxrulectr(79,83).
% edge(2 , 3).
% 
hasrule(1,84).
time(84,200).
assert(84).
pos(85).
head(84,85).
rulepred(84,85).
arity(85,2).
pred(85,"edge").
cnst(86,"2").
alist(85,1,86).
cnst(87,"3").
alist(85,2,87).
maxrulectr(84,88).
% edge(3 , 1).
% 
hasrule(1,89).
time(89,200).
assert(89).
pos(90).
head(89,90).
rulepred(89,90).
arity(90,2).
pred(90,"edge").
cnst(91,"3").
alist(90,1,91).
cnst(92,"1").
alist(90,2,92).
maxrulectr(89,93).
% edge(1 , 3).
% 
hasrule(1,94).
time(94,200).
assert(94).
pos(95).
head(94,95).
rulepred(94,95).
arity(95,2).
pred(95,"edge").
cnst(96,"1").
alist(95,1,96).
cnst(97,"3").
alist(95,2,97).
maxrulectr(94,98).
% edge(3 , 2).
% 
hasrule(1,99).
time(99,200).
assert(99).
pos(100).
head(99,100).
rulepred(99,100).
arity(100,2).
pred(100,"edge").
cnst(101,"3").
alist(100,1,101).
cnst(102,"2").
alist(100,2,102).
maxrulectr(99,103).
% edge(2 , 1).
% 
hasrule(1,104).
assert(104).
time(104,200).
pos(105).
head(104,105).
rulepred(104,105).
arity(105,2).
pred(105,"edge").
cnst(106,"2").
alist(105,1,106).
cnst(107,"1").
alist(105,2,107).
maxrulectr(104,108).
freectr(109).
